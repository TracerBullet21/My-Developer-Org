/**
 * The Invoice Line Item Details Service test class for the customer self service community tests
 * the services offered by the CSS_SAPInvoiceDetailService and SAP JM_InvoiceDetailService classes.
 *
 * This test class implments the WebServiceMock interface to instruct the Apex runtime engine to 
 * generate a fake response whenever WebServiceCallout.invoke is called. This class is public to
 * allow other test methods to use it's mock web service. 
 *
 * @author Craig Poirier
 * @version 1.0
 * @see CSS_SAPInvoiceDetailService
 */
@isTest
public class CSS_SAPInvoiceDetailServiceTest implements WebServiceMock {

  /**
   * The setup method is use to create test records once then access them in every test method
   * in this test class. For this test class, we just need to bypass triggers and validations.
   */
  @testSetup static void setup() {
    CSS_TestDataFactory.setEnviroment(true, true); // bypass triggers and validations
  }

  /** 
   * Test retrieval of SAP invoice line items (i.e., details) using a mock web service.
   */
  @isTest static void testGetInvoiceDetail() {
    Test.setMock(WebServiceMock.class, new CSS_SAPInvoiceDetailServiceTest());

    Test.startTest();
    CSS_SAPInvoiceDetailService.InvoiceDetail detail = 
      CSS_SAPInvoiceDetailService.getInvoiceDetail('0911111111');

    // Validate each line item field, taking into consideration detail cleaning
    System.assertEquals('10',detail.lineItemsList[0].itemNumber);
    System.assertEquals('90021834',detail.lineItemsList[0].materialNumber);
    System.assertEquals('MW316 SAFB 3x16x48',detail.lineItemsList[0].materialDescription);
    System.assertEquals('512 FT2',detail.lineItemsList[0].quantity);
    System.assertEquals('0.36',detail.lineItemsList[0].unitPrice); // test rounding
    System.assertEquals('184.42',detail.lineItemsList[0].value);
    System.assertEquals('test IV',detail.lineItemsList[0].poNumber);              
    Test.stopTest();
  }

  /** 
   * Test that the proper error message is displayed when the service is down
   */
  @isTest static void testGetInvoiceDetailWithErrors() {
    Test.startTest();
    try {
      CSS_SAPInvoiceDetailService.InvoiceDetail detail = 
        CSS_SAPInvoiceDetailService.getInvoiceDetail('0911111111');
      System.assert(false, 'Code execution should not reach this point due to an expected thrown exception.');
    }
    catch (Exception ex) {
      System.assert(String.isNotBlank(ex.getMessage()), 'Expecting an error message due to thrown exception.');
    }
    Test.stopTest();
  }

  /** 
   * When you create an Apex class from a WSDL, the methods in the auto-generated class call 
   * WebServiceCallout.invoke, which performs the callout to the external service. To test these
   * these methods such as GetInvoiceDetail, we need to instruct the Apex runtime to generate a 
   * fake response whenever WebServiceCallout.invoke is called. 
   *
   * To do so, we implemented the WebServiceMock interface (see above) and specifed a fake response 
   * for the Apex runtime to send within this method.
   */
  public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint,
    String soapAction, String requestName, String responseNS, String responseName, String responseType) {
    
    // Create a fake web service output, which will be verified in the test method
    JM_InvoiceDetailService.InvoiceDetailOutput output = new JM_InvoiceDetailService.InvoiceDetailOutput();
    output.invoiceDetailJSON = '{"invoiceNumber":"0901124932","lineItemsList":[{';
    output.invoiceDetailJSON += '"itemNumber":"10",';
    output.invoiceDetailJSON += '"materialNumber":"90021834",';
    output.invoiceDetailJSON += '"materialDescription":"MW316 SAFB 3x16x48",';
    output.invoiceDetailJSON += '"quantity":"512 FT2",';
    output.invoiceDetailJSON += '"unitPrice":"0.3602",';
    output.invoiceDetailJSON += '"value":"184.42",';
    output.invoiceDetailJSON += '"poNumber":"test IV"';
    output.invoiceDetailJSON += '}]}';

    // Create response element from the autogenerated class add it to the response parameter
    JM_InvoiceDetailService.queryInvoiceDetailResponse element = 
      new JM_InvoiceDetailService.queryInvoiceDetailResponse();
    element.invoiceDetailOutput = output;
    response.put('response_x', element); 
  }
}